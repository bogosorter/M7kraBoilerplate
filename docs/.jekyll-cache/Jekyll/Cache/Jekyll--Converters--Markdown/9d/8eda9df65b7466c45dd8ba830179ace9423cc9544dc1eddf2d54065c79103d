I"Fe<h1 class="no_toc" id="controller">Controller</h1>

<h2 class="no_toc" id="table-of-contents">Table of Contents</h2>

<ul id="markdown-toc">
  <li><a href="#controller-1" id="markdown-toc-controller-1">Controller</a>    <ul>
      <li><a href="#constructor" id="markdown-toc-constructor">Constructor</a></li>
    </ul>
  </li>
  <li><a href="#playbackmanager" id="markdown-toc-playbackmanager">PlaybackManager</a>    <ul>
      <li><a href="#constructor-1" id="markdown-toc-constructor-1">Constructor</a></li>
      <li><a href="#methods" id="markdown-toc-methods">Methods</a>        <ul>
          <li><a href="#start" id="markdown-toc-start"><code class="language-plaintext highlighter-rouge">start</code></a></li>
          <li><a href="#play" id="markdown-toc-play"><code class="language-plaintext highlighter-rouge">play</code></a></li>
          <li><a href="#pause" id="markdown-toc-pause"><code class="language-plaintext highlighter-rouge">pause</code></a></li>
          <li><a href="#stop" id="markdown-toc-stop"><code class="language-plaintext highlighter-rouge">stop</code></a></li>
          <li><a href="#seekfwd" id="markdown-toc-seekfwd"><code class="language-plaintext highlighter-rouge">seekFwd</code></a></li>
          <li><a href="#seekbwd" id="markdown-toc-seekbwd"><code class="language-plaintext highlighter-rouge">seekBwd</code></a></li>
          <li><a href="#skipfwd" id="markdown-toc-skipfwd"><code class="language-plaintext highlighter-rouge">skipFwd</code></a></li>
          <li><a href="#skipbwd" id="markdown-toc-skipbwd"><code class="language-plaintext highlighter-rouge">skipBwd</code></a></li>
          <li><a href="#setprogress" id="markdown-toc-setprogress"><code class="language-plaintext highlighter-rouge">setProgress</code></a></li>
          <li><a href="#playtracks" id="markdown-toc-playtracks"><code class="language-plaintext highlighter-rouge">playTracks</code></a></li>
          <li><a href="#addnext" id="markdown-toc-addnext"><code class="language-plaintext highlighter-rouge">addNext</code></a></li>
          <li><a href="#addtoqueue" id="markdown-toc-addtoqueue"><code class="language-plaintext highlighter-rouge">addToQueue</code></a></li>
          <li><a href="#reorderqueue" id="markdown-toc-reorderqueue"><code class="language-plaintext highlighter-rouge">reorderQueue</code></a></li>
          <li><a href="#removefromqueue" id="markdown-toc-removefromqueue"><code class="language-plaintext highlighter-rouge">removeFromQueue</code></a></li>
          <li><a href="#gettracks" id="markdown-toc-gettracks"><code class="language-plaintext highlighter-rouge">getTracks</code></a></li>
          <li><a href="#updateplayback" id="markdown-toc-updateplayback"><code class="language-plaintext highlighter-rouge">updatePlayback</code></a></li>
        </ul>
      </li>
      <li><a href="#event-listeners" id="markdown-toc-event-listeners">Event listeners</a></li>
    </ul>
  </li>
  <li><a href="#statemanager" id="markdown-toc-statemanager">StateManager</a>    <ul>
      <li><a href="#constructor-2" id="markdown-toc-constructor-2">Constructor</a></li>
      <li><a href="#methods-1" id="markdown-toc-methods-1">Methods</a>        <ul>
          <li><a href="#changeview" id="markdown-toc-changeview"><code class="language-plaintext highlighter-rouge">changeView</code></a></li>
          <li><a href="#getlibrary" id="markdown-toc-getlibrary"><code class="language-plaintext highlighter-rouge">getLibrary</code></a></li>
          <li><a href="#savesettings" id="markdown-toc-savesettings"><code class="language-plaintext highlighter-rouge">saveSettings</code></a></li>
          <li><a href="#implementsettings" id="markdown-toc-implementsettings"><code class="language-plaintext highlighter-rouge">implementSettings</code></a></li>
          <li><a href="#resetsettings" id="markdown-toc-resetsettings"><code class="language-plaintext highlighter-rouge">resetSettings</code></a></li>
          <li><a href="#open" id="markdown-toc-open"><code class="language-plaintext highlighter-rouge">open</code></a></li>
          <li><a href="#addcover" id="markdown-toc-addcover"><code class="language-plaintext highlighter-rouge">addCover</code></a></li>
          <li><a href="#deletealbum" id="markdown-toc-deletealbum"><code class="language-plaintext highlighter-rouge">deleteAlbum</code></a></li>
          <li><a href="#updatealbuminfo" id="markdown-toc-updatealbuminfo"><code class="language-plaintext highlighter-rouge">updateAlbumInfo</code></a></li>
          <li><a href="#updatetrackinfo" id="markdown-toc-updatetrackinfo"><code class="language-plaintext highlighter-rouge">updateTrackInfo</code></a></li>
          <li><a href="#windowbutton" id="markdown-toc-windowbutton"><code class="language-plaintext highlighter-rouge">windowButton</code></a></li>
          <li><a href="#resetlibrary" id="markdown-toc-resetlibrary"><code class="language-plaintext highlighter-rouge">resetLibrary</code></a></li>
          <li><a href="#log" id="markdown-toc-log"><code class="language-plaintext highlighter-rouge">log</code></a></li>
        </ul>
      </li>
      <li><a href="#event-listeners-1" id="markdown-toc-event-listeners-1">Event listeners</a></li>
    </ul>
  </li>
</ul>

<h2 id="controller-1">Controller</h2>

<p>Class that manages the app. Data access, state managing and music playing are its most important functions. It is divided into two other classes: <code class="language-plaintext highlighter-rouge">Playback</code> and <code class="language-plaintext highlighter-rouge">StateManager</code>.</p>

<h3 id="constructor">Constructor</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">Controller</span> <span class="p">{</span>
    <span class="kd">constructor</span><span class="p">(</span><span class="nx">setView</span><span class="p">,</span> <span class="nx">setLibrary</span><span class="p">,</span> <span class="nx">setAlbumDetails</span><span class="p">,</span> <span class="nx">setSettings</span><span class="p">,</span> <span class="nx">setPlayback</span><span class="p">,</span> <span class="nx">setLoading</span><span class="p">,</span> <span class="nx">addLog</span><span class="p">)</span> <span class="p">{</span>
        <span class="p">...</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">playback</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Playback</span><span class="p">(...);</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">stateManager</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">StateManager</span><span class="p">(...);</span>
        <span class="p">...</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="playbackmanager">PlaybackManager</h2>

<p>Class that controls what is playing, what will play next, when to pause, etc., using the <a href="https://howlerjs.com/">Howler</a> library.</p>

<h3 id="constructor-1">Constructor</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">Playback</span> <span class="p">{</span>
    <span class="kd">constructor</span><span class="p">(</span><span class="nx">setPlayback</span><span class="p">)</span> <span class="p">{</span>
        <span class="p">...</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">playback</span> <span class="o">=</span> <span class="p">{</span>
            <span class="na">album</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span> <span class="c1">// Object that stores info about the playing album</span>
            <span class="na">track</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span> <span class="c1">// Object that stores info about the playing track</span>
            <span class="na">queue</span><span class="p">:</span> <span class="p">[],</span> <span class="c1">// Array of tracks in queue</span>
            <span class="na">position</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="c1">// Index of the playing track in queue</span>
            <span class="na">progress</span><span class="p">:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">,</span> <span class="c1">// Returns a value between 0 and 1</span>
            <span class="na">playing</span><span class="p">:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="kc">false</span> <span class="c1">// Is playback playing or paused?</span>
        <span class="p">};</span>
        <span class="p">...</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="methods">Methods</h3>

<h4 id="start"><code class="language-plaintext highlighter-rouge">start</code></h4>

<p><strong>Description:</strong> Starts the playback of a new track, according to <code class="language-plaintext highlighter-rouge">playback.position</code>.</p>

<p><strong>Arguments:</strong> None</p>

<p><strong>Return value:</strong> None</p>

<h4 id="play"><code class="language-plaintext highlighter-rouge">play</code></h4>

<p><strong>Description:</strong> Continues the playback.</p>

<p><strong>Arguments:</strong> None</p>

<p><strong>Return value:</strong> None</p>

<h4 id="pause"><code class="language-plaintext highlighter-rouge">pause</code></h4>

<p><strong>Description:</strong> Pauses the playback.</p>

<p><strong>Arguments:</strong> None</p>

<p><strong>Return value:</strong> None</p>

<h4 id="stop"><code class="language-plaintext highlighter-rouge">stop</code></h4>

<p><strong>Description:</strong> Stops the playback and sets the properties of <code class="language-plaintext highlighter-rouge">playback</code> to their default value.</p>

<p><strong>Arguments:</strong> None</p>

<p><strong>Return value:</strong> None</p>

<h4 id="seekfwd"><code class="language-plaintext highlighter-rouge">seekFwd</code></h4>

<p><strong>Description:</strong> Advances playback 5 seconds.</p>

<p><strong>Arguments:</strong> None</p>

<p><strong>Return value:</strong> None</p>

<h4 id="seekbwd"><code class="language-plaintext highlighter-rouge">seekBwd</code></h4>

<p><strong>Description:</strong> Retards playback 5 seconds.</p>

<p><strong>Arguments:</strong> None</p>

<p><strong>Return value:</strong> None</p>

<h4 id="skipfwd"><code class="language-plaintext highlighter-rouge">skipFwd</code></h4>

<p><strong>Description:</strong> Increments <code class="language-plaintext highlighter-rouge">position</code> and plays the corresponding track. If all tracks in <code class="language-plaintext highlighter-rouge">playback.queue</code> were played, <code class="language-plaintext highlighter-rouge">playback</code> is set to its default values.</p>

<p><strong>Arguments:</strong> None</p>

<p><strong>Return value:</strong> None</p>

<h4 id="skipbwd"><code class="language-plaintext highlighter-rouge">skipBwd</code></h4>

<p><strong>Description:</strong> If playing time is greater than 5 seconds, returns to beginning of the track. If this condition is not true, decrements <code class="language-plaintext highlighter-rouge">position</code> and plays the corresponding track.</p>

<p><strong>Arguments:</strong> None</p>

<p><strong>Return value:</strong> None</p>

<h4 id="setprogress"><code class="language-plaintext highlighter-rouge">setProgress</code></h4>

<p><strong>Description:</strong> Sets the music progress to the percentage given in the argument.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">progress</code></p>

<p><strong>Return value:</strong> None</p>

<h4 id="playtracks"><code class="language-plaintext highlighter-rouge">playTracks</code></h4>

<p><strong>Description:</strong> Immediately stops current playback and plays the supplied list of tracks. Even when choosing the third track in a list, the user expects to be able to go back to the second one. This is why <code class="language-plaintext highlighter-rouge">jump</code> is used: <code class="language-plaintext highlighter-rouge">tracks</code> represents all the tracks and <code class="language-plaintext highlighter-rouge">jump</code> would be 2.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">tracks</code>, <code class="language-plaintext highlighter-rouge">jump</code></p>

<p><strong>Return value:</strong> None</p>

<h4 id="addnext"><code class="language-plaintext highlighter-rouge">addNext</code></h4>

<p><strong>Description:</strong> Adds the supplied list of tracks to the queue, right next to the currently playing one.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">tracks</code></p>

<p><strong>Return value:</strong> None</p>

<h4 id="addtoqueue"><code class="language-plaintext highlighter-rouge">addToQueue</code></h4>

<p><strong>Description:</strong> Adds the supplied list of tracks to the end of the queue.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">tracks</code>, <code class="language-plaintext highlighter-rouge">jump</code></p>

<p><strong>Return value:</strong> None</p>

<h4 id="reorderqueue"><code class="language-plaintext highlighter-rouge">reorderQueue</code></h4>

<p><strong>Description:</strong> Changes the position of one track in the queue. If this change affects <code class="language-plaintext highlighter-rouge">playback.position</code>, its value should be updated.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">from</code>, <code class="language-plaintext highlighter-rouge">to</code>.</p>

<p><strong>Return value:</strong> None</p>

<h4 id="removefromqueue"><code class="language-plaintext highlighter-rouge">removeFromQueue</code></h4>

<p><strong>Description:</strong> Removes the track a <code class="language-plaintext highlighter-rouge">index</code> position of the queue. If this change affects <code class="language-plaintext highlighter-rouge">playback.position</code>, its value should be updated.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">index</code></p>

<p><strong>Return value:</strong> None</p>

<h4 id="gettracks"><code class="language-plaintext highlighter-rouge">getTracks</code></h4>

<p><strong>Description:</strong> Gets tracks according to <code class="language-plaintext highlighter-rouge">sourceType</code> and <code class="language-plaintext highlighter-rouge">detail</code> and forwards them to <code class="language-plaintext highlighter-rouge">playTracks</code>, <code class="language-plaintext highlighter-rouge">addNext</code> or <code class="language-plaintext highlighter-rouge">addToQueue</code> according to <code class="language-plaintext highlighter-rouge">destination</code>.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">sourceType</code> (<code class="language-plaintext highlighter-rouge">albumID</code>, <code class="language-plaintext highlighter-rouge">track</code> or <code class="language-plaintext highlighter-rouge">tracks</code>), <code class="language-plaintext highlighter-rouge">detail</code> (depending on the value of <code class="language-plaintext highlighter-rouge">sourceType</code>, an integer, a track or a list of tracks), <code class="language-plaintext highlighter-rouge">destination</code>, <code class="language-plaintext highlighter-rouge">jump = 0</code>.</p>

<p><strong>Return value:</strong> None</p>

<h4 id="updateplayback"><code class="language-plaintext highlighter-rouge">updatePlayback</code></h4>

<p><strong>Description:</strong> Updates the state of UI elements depending so that they match <code class="language-plaintext highlighter-rouge">playback</code>.</p>

<p><strong>Arguments:</strong> None</p>

<p><strong>Return value:</strong> None</p>

<h3 id="event-listeners">Event listeners</h3>

<p>Since this apps tries to follow an MVC structure, most of the functions in <code class="language-plaintext highlighter-rouge">PlaybackManager</code> are triggered by events. <code class="language-plaintext highlighter-rouge">PlaybackManager</code> should set up event listeners for <code class="language-plaintext highlighter-rouge">play</code>, <code class="language-plaintext highlighter-rouge">pause</code>, <code class="language-plaintext highlighter-rouge">stop</code>, <code class="language-plaintext highlighter-rouge">seekFwd</code>, <code class="language-plaintext highlighter-rouge">seekBwd</code>, <code class="language-plaintext highlighter-rouge">skipFwd</code>, <code class="language-plaintext highlighter-rouge">skipBwd</code>, <code class="language-plaintext highlighter-rouge">setProgress</code>, <code class="language-plaintext highlighter-rouge">reorderQueue</code>, <code class="language-plaintext highlighter-rouge">removeFromQueue</code> and <code class="language-plaintext highlighter-rouge">getTracks</code>.</p>

<h2 id="statemanager">StateManager</h2>

<p>Class that controls the state and visual appearance of various app components.</p>

<h3 id="constructor-2">Constructor</h3>

<p>Upon constructing, <code class="language-plaintext highlighter-rouge">StateManager</code> should implement the settings and store them in <code class="language-plaintext highlighter-rouge">window.settings</code> (for use in other components).</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">StateManager</span> <span class="p">{</span>
    <span class="kd">constructor</span> <span class="p">(</span><span class="nx">setView</span><span class="p">,</span> <span class="nx">setLoading</span><span class="p">,</span> <span class="nx">setLibrary</span><span class="p">,</span> <span class="nx">setAlbumDetails</span><span class="p">,</span> <span class="nx">SetSettings</span><span class="p">,</span> <span class="nx">addLog</span><span class="p">)</span> <span class="p">{</span>
        <span class="p">...</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="methods-1">Methods</h3>

<h4 id="changeview"><code class="language-plaintext highlighter-rouge">changeView</code></h4>

<p><strong>Description:</strong> Sets the app view to <code class="language-plaintext highlighter-rouge">view</code>, updating album details if needed, according to <code class="language-plaintext highlighter-rouge">albumID</code>. Should call the main process’s <code class="language-plaintext highlighter-rouge">setMiniPlayer</code> if <code class="language-plaintext highlighter-rouge">view == miniplayer</code>.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">view</code>,<code class="language-plaintext highlighter-rouge">[albumID]</code></p>

<p><strong>Return value:</strong> None</p>

<h4 id="getlibrary"><code class="language-plaintext highlighter-rouge">getLibrary</code></h4>

<p><strong>Description:</strong> Gets the library according to <code class="language-plaintext highlighter-rouge">searchParameters</code> and updates the <code class="language-plaintext highlighter-rouge">Library</code> component.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">searchParameters</code></p>

<p><strong>Return value:</strong> None</p>

<h4 id="savesettings"><code class="language-plaintext highlighter-rouge">saveSettings</code></h4>

<p><strong>Description:</strong> Sets the provided settings and makes the necessary changes to the app. <code class="language-plaintext highlighter-rouge">firstTime</code> should always be saved as false.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">settings</code></p>

<p><strong>Return value:</strong> None</p>

<h4 id="implementsettings"><code class="language-plaintext highlighter-rouge">implementSettings</code></h4>

<p><strong>Description:</strong> Adapts the app to the current <code class="language-plaintext highlighter-rouge">settings</code>.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">settings</code></p>

<p><strong>Return value:</strong> None</p>

<h4 id="resetsettings"><code class="language-plaintext highlighter-rouge">resetSettings</code></h4>

<p><strong>Description:</strong> Restores settings to their original value.</p>

<p><strong>Arguments:</strong> None</p>

<p><strong>Return value:</strong> None</p>

<h4 id="open"><code class="language-plaintext highlighter-rouge">open</code></h4>

<p><strong>Description:</strong> Calls the main process’s <code class="language-plaintext highlighter-rouge">open</code> handler and refreshes the library after it.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">type = folder</code> (<code class="language-plaintext highlighter-rouge">folder</code> or <code class="language-plaintext highlighter-rouge">file</code>)</p>

<p><strong>Return value:</strong> None</p>

<h4 id="addcover"><code class="language-plaintext highlighter-rouge">addCover</code></h4>

<p><strong>Description:</strong> Calls the main process’s <code class="language-plaintext highlighter-rouge">addCover</code> handler and refreshes the component that called it according to <code class="language-plaintext highlighter-rouge">caller</code>.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">albumID</code>, <code class="language-plaintext highlighter-rouge">caller</code> (<code class="language-plaintext highlighter-rouge">albumDetails</code> or <code class="language-plaintext highlighter-rouge">library</code>)</p>

<p><strong>Return value:</strong> None</p>

<h4 id="deletealbum"><code class="language-plaintext highlighter-rouge">deleteAlbum</code></h4>

<p><strong>Description:</strong> Calls the main process’s <code class="language-plaintext highlighter-rouge">deleteAlbum</code> handler and refreshes the library after it.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">albumID</code></p>

<p><strong>Return value:</strong> None</p>

<h4 id="updatealbuminfo"><code class="language-plaintext highlighter-rouge">updateAlbumInfo</code></h4>

<p><strong>Description:</strong> Calls the main process’s <code class="language-plaintext highlighter-rouge">updateAlbumInfo</code> handler and refreshes the <code class="language-plaintext highlighter-rouge">AlbumDetails</code> component.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">albumID</code>, <code class="language-plaintext highlighter-rouge">albumInfo</code></p>

<p><strong>Return value:</strong> None</p>

<h4 id="updatetrackinfo"><code class="language-plaintext highlighter-rouge">updateTrackInfo</code></h4>

<p><strong>Description:</strong> Calls the main process’s <code class="language-plaintext highlighter-rouge">updateTrackInfo</code> handler and refreshes the <code class="language-plaintext highlighter-rouge">AlbumDetails</code> component.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">albumID</code>, <code class="language-plaintext highlighter-rouge">trackID</code>, <code class="language-plaintext highlighter-rouge">trackInfo</code></p>

<p><strong>Return value:</strong> None</p>

<h4 id="windowbutton"><code class="language-plaintext highlighter-rouge">windowButton</code></h4>

<p><strong>Description:</strong> Calls the main process’s <code class="language-plaintext highlighter-rouge">windowButton</code> handler.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">button</code></p>

<p><strong>Return value:</strong> None</p>

<h4 id="resetlibrary"><code class="language-plaintext highlighter-rouge">resetLibrary</code></h4>

<p><strong>Description:</strong> Deletes the database.</p>

<p><strong>Arguments:</strong> None</p>

<p><strong>Return value:</strong> None</p>

<h4 id="log"><code class="language-plaintext highlighter-rouge">log</code></h4>

<p><strong>Description:</strong> Logs the <code class="language-plaintext highlighter-rouge">message</code> using the <code class="language-plaintext highlighter-rouge">Logger</code> component.</p>

<p><strong>Arguments:</strong> <code class="language-plaintext highlighter-rouge">message</code></p>

<p><strong>Return value:</strong> None</p>

<h3 id="event-listeners-1">Event listeners</h3>

<p><code class="language-plaintext highlighter-rouge">StateManager</code> should set up event listeners for <code class="language-plaintext highlighter-rouge">changeView</code>, <code class="language-plaintext highlighter-rouge">getLibrary</code>, <code class="language-plaintext highlighter-rouge">saveSettings</code>, <code class="language-plaintext highlighter-rouge">resetSettings</code>, <code class="language-plaintext highlighter-rouge">open</code>, <code class="language-plaintext highlighter-rouge">addCover</code>, <code class="language-plaintext highlighter-rouge">deleteAlbum</code>, <code class="language-plaintext highlighter-rouge">updateAlbumInfo</code>, <code class="language-plaintext highlighter-rouge">updateTrackInfo</code>, <code class="language-plaintext highlighter-rouge">windowButton</code>, <code class="language-plaintext highlighter-rouge">resetLibrary</code>, <code class="language-plaintext highlighter-rouge">resetSettings</code> and <code class="language-plaintext highlighter-rouge">log</code>. In addition, <code class="language-plaintext highlighter-rouge">log</code> should also be listened on <code class="language-plaintext highlighter-rouge">ipcRenderer</code>.</p>
:ET